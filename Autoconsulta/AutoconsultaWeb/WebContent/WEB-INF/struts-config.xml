<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.1//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_1.dtd">



<!--

     This is a blank Struts configuration file with an example

     welcome action/page and other commented sample elements.



     Tiles and the Struts Validator are configured using the factory defaults

     and are ready-to-use.



     NOTE: If you have a generator tool to create the corresponding Java classes

     for you, you could include the details in the "form-bean" declarations.

     Otherwise, you would only define the "form-bean" element itself, with the

     corresponding "name" and "type" attributes, as shown here.

-->





<struts-config>



<!-- ==================================== Data Source Configuration -->

<!--

 <data-sources>

   <data-source>

     <set-property

        property="autoCommit"

        value="false"/>

     <set-property

        property="description"

        value="Example Data Source Configuration"/>

     <set-property

        property="driverClass"

        value="org.postgresql.Driver"/>

     <set-property

        property="maxCount"

        value="4"/>

     <set-property

        property="minCount"

        value="2"/>

     <set-property

        property="password"

        value="mypassword"/>

     <set-property

        property="url"

        value="jdbc:postgresql://localhost/mydatabase"/>

     <set-property

        property="user"

        value="myusername"/>

   </data-source>

 </data-sources>

-->



<!-- ======================================== Form Bean Definitions -->



    <form-beans>



    <!-- sample form bean descriptor for an ActionForm

        <form-bean

            name="inputForm"

            type="app.InputForm"/>

    end sample -->



    <!-- sample form bean descriptor for a DynaActionForm

        <form-bean

            name="logonForm"

            type="org.apache.struts.action.DynaActionForm">

            <form-property

                name="username"

                type="java.lang.String"/>

            <form-property

                name="password"

                type="java.lang.String"/>

    end sample -->



    </form-beans>





<!-- ================================= Global Exception Definitions -->



    <global-exceptions>

        <!-- sample exception handler

        <exception

            key="expired.password"

            type="app.ExpiredPasswordException"

            path="/changePassword.jsp"/>

        end sample -->

    </global-exceptions>





<!-- =================================== Global Forward Definitions -->



    <global-forwards>


    </global-forwards>





<!-- =================================== Action Mapping Definitions -->



    <action-mappings>

            <!-- Default "Welcome" action -->

            <!-- Forwards to Welcome.jsp -->


    <!-- sample input and input submit actions



        <action

            path="/Input"

            type="org.apache.struts.actions.ForwardAction"

            parameter="/pages/Input.jsp"/>



        <action

            path="/InputSubmit"

            type="app.InputAction"

            name="inputForm"

            scope="request"

            validate="true"

            input="/pages/Input.jsp"/>



    end samples -->
    
    <action path="/creaPublicidadWeb" type="cl.araucana.autoconsulta.ui.actions.CreaPublicidadWebAction">
    </action>

	 



    </action-mappings>





<!-- ===================================== Controller Configuration -->



 <!-- Deshabilita el atributo 'processorClass' para permitir el acceso público a actions que lo requieran,
      por ejemplo: '/web/validarCertificado'.
 
      Baja la actual versión de AC basada en seguridad J2EE, los actions que requieren acceso restringido quedan
      protegidos en una <security-constraint> del web.xml respectivo.
      
      En cambio, la versión anterior que estaba basada en seguridad programada, protegía TODOS LOS ACTIONS mediante
      el request processor personalizado 'cl.araucana.common.ui.struts.ExternalSecureRequestProcessor', el cual
      verifica que el usuario que envía el request esté previamente autenticado. En caso de no estarlo, se realiza
      un forward al action '/SecurityPageError'. (gpavez@hotmail.com, 20/11/2007, REQ4369).
 
    <controller nocache="true" processorClass="cl.araucana.common.ui.struts.ExternalSecureRequestProcessor"/> -->
    
    <controller nocache="true" />

<!-- ================================ Message Resources Definitions -->



    <message-resources parameter="resources.application"/>





<!-- ======================================= Plug Ins Configuration -->


  <!-- ========== Tiles plugin ===================  -->
  <!--												-->
  <!--
     This plugin initialize Tiles definition factory. This later can takes some
	 parameters explained here after. The plugin first read parameters from web.xml, then
	 overload them with parameters defined here. All parameters are optional.
	 The plugin should be declared in each struts-config file.
       - definitions-config: (optional)
            Specify configuration file names. There can be several comma
		    separated file names (default: ?? )
       - moduleAware: (optional - struts1.1)
            Specify if the Tiles definition factory is module aware. If true (default),
			there will be one factory for each Struts module.
			If false, there will be one common factory for all module. In this later case,
			it is still needed to declare one plugin per module. The factory will be
			initialized with parameters found in the first initialized plugin (generally the
			one associated with the default module).
			  true : One factory per module. (default)
			  false : one single shared factory for all modules
	   - definitions-parser-validate: (optional)
	        Specify if xml parser should validate the Tiles configuration file.
			  true : validate. DTD should be specified in file header. (default)
			  false : no validation

	  Paths found in Tiles definitions are relative to the main context.
  -->

 <!-- <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
    <set-property
        property="pathnames"
        value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml"/>
  </plug-in> -->

</struts-config>